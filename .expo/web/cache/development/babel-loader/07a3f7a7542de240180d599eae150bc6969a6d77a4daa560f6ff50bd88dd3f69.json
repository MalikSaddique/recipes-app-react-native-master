{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport Hammer from '@egjs/hammerjs';\nimport { MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD, MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD } from \"./constants\";\nimport DraggingGestureHandler from \"./DraggingGestureHandler\";\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from \"./utils\";\nimport { State } from \"../State\";\nvar PanGestureHandler = function (_DraggingGestureHandl) {\n  _inherits(PanGestureHandler, _DraggingGestureHandl);\n  var _super = _createSuper(PanGestureHandler);\n  function PanGestureHandler() {\n    _classCallCheck(this, PanGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PanGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'pan';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return Hammer.Pan;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(PanGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        direction: this.getDirection()\n      });\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var nextState = _get(_getPrototypeOf(PanGestureHandler.prototype), \"getState\", this).call(this, type);\n      if (this.previousState === State.UNDETERMINED && nextState === State.ACTIVE) {\n        return State.BEGAN;\n      }\n      return nextState;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function getDirection() {\n      var config = this.getConfig();\n      var activeOffsetXStart = config.activeOffsetXStart,\n        activeOffsetXEnd = config.activeOffsetXEnd,\n        activeOffsetYStart = config.activeOffsetYStart,\n        activeOffsetYEnd = config.activeOffsetYEnd,\n        minDist = config.minDist;\n      var directions = [];\n      var horizontalDirections = [];\n      if (!isnan(minDist)) {\n        return Hammer.DIRECTION_ALL;\n      }\n      if (!isnan(activeOffsetXStart)) horizontalDirections.push(Hammer.DIRECTION_LEFT);\n      if (!isnan(activeOffsetXEnd)) horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n      if (horizontalDirections.length === 2) horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n      directions = directions.concat(horizontalDirections);\n      var verticalDirections = [];\n      if (!isnan(activeOffsetYStart)) verticalDirections.push(Hammer.DIRECTION_UP);\n      if (!isnan(activeOffsetYEnd)) verticalDirections.push(Hammer.DIRECTION_DOWN);\n      if (verticalDirections.length === 2) verticalDirections = [Hammer.DIRECTION_VERTICAL];\n      directions = directions.concat(verticalDirections);\n      if (!directions.length) {\n        return Hammer.DIRECTION_NONE;\n      }\n      if (directions[0] === Hammer.DIRECTION_HORIZONTAL && directions[1] === Hammer.DIRECTION_VERTICAL) {\n        return Hammer.DIRECTION_ALL;\n      }\n      if (horizontalDirections.length && verticalDirections.length) {\n        return Hammer.DIRECTION_ALL;\n      }\n      return directions[0];\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        return {\n          minDistSq: 10\n        };\n      }\n      return this.config;\n    }\n  }, {\n    key: \"shouldFailUnderCustomCriteria\",\n    value: function shouldFailUnderCustomCriteria(_ref, criteria) {\n      var deltaX = _ref.deltaX,\n        deltaY = _ref.deltaY;\n      return !isnan(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !isnan(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n  }, {\n    key: \"shouldActivateUnderCustomCriteria\",\n    value: function shouldActivateUnderCustomCriteria(_ref2, criteria) {\n      var deltaX = _ref2.deltaX,\n        deltaY = _ref2.deltaY,\n        velocity = _ref2.velocity;\n      return !isnan(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !isnan(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !isnan(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !isnan(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) || TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) || TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq);\n    }\n  }, {\n    key: \"shouldMultiFingerPanFail\",\n    value: function shouldMultiFingerPanFail(_ref3) {\n      var pointerLength = _ref3.pointerLength,\n        scale = _ref3.scale,\n        deltaRotation = _ref3.deltaRotation;\n      if (pointerLength <= 1) {\n        return false;\n      }\n      var deltaScale = Math.abs(scale - 1);\n      var absDeltaRotation = Math.abs(deltaRotation);\n      if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        return true;\n      }\n      if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(criteria) {\n      return isValidNumber(criteria.minDistSq) || isValidNumber(criteria.minVelocityX) || isValidNumber(criteria.minVelocityY) || isValidNumber(criteria.minVelocitySq) || isValidNumber(criteria.activeOffsetXStart) || isValidNumber(criteria.activeOffsetXEnd) || isValidNumber(criteria.activeOffsetYStart) || isValidNumber(criteria.activeOffsetYEnd);\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(props, _recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n      var velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n      if (this.hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity: velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false\n      };\n    }\n  }]);\n  return PanGestureHandler;\n}(DraggingGestureHandler);\nexport default PanGestureHandler;","map":{"version":3,"names":["Hammer","MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD","MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD","DraggingGestureHandler","isValidNumber","isnan","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","State","PanGestureHandler","_DraggingGestureHandl","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","Pan","value","getHammerConfig","_objectSpread","_get","_getPrototypeOf","prototype","call","direction","getDirection","getState","type","nextState","previousState","UNDETERMINED","ACTIVE","BEGAN","config","getConfig","activeOffsetXStart","activeOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","minDist","directions","horizontalDirections","DIRECTION_ALL","push","DIRECTION_LEFT","DIRECTION_RIGHT","length","DIRECTION_HORIZONTAL","concat","verticalDirections","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_NONE","hasCustomActivationCriteria","minDistSq","shouldFailUnderCustomCriteria","_ref","criteria","deltaX","deltaY","failOffsetXStart","failOffsetXEnd","failOffsetYStart","failOffsetYEnd","shouldActivateUnderCustomCriteria","_ref2","velocity","x","y","minVelocityX","minVelocityY","minVelocitySq","shouldMultiFingerPanFail","_ref3","pointerLength","scale","deltaRotation","deltaScale","Math","abs","absDeltaRotation","updateHasCustomActivationCriteria","isGestureEnabledForEvent","props","_recognizer","inputData","failed","velocityX","velocityY","maxPointers","success"],"sources":["C:/Users/A S Computer/recipes-app-react-native-master/node_modules/react-native-gesture-handler/lib/module/web/PanGestureHandler.js"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\nimport { MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD, MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD } from './constants';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\nimport { State } from '../State';\n\nclass PanGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'pan';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pan;\n  }\n\n  getHammerConfig() {\n    return { ...super.getHammerConfig(),\n      direction: this.getDirection()\n    };\n  }\n\n  getState(type) {\n    const nextState = super.getState(type); // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n\n    if (this.previousState === State.UNDETERMINED && nextState === State.ACTIVE) {\n      return State.BEGAN;\n    }\n\n    return nextState;\n  }\n\n  getDirection() {\n    const config = this.getConfig();\n    const {\n      activeOffsetXStart,\n      activeOffsetXEnd,\n      activeOffsetYStart,\n      activeOffsetYEnd,\n      minDist\n    } = config;\n    let directions = [];\n    let horizontalDirections = [];\n\n    if (!isnan(minDist)) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    if (!isnan(activeOffsetXStart)) horizontalDirections.push(Hammer.DIRECTION_LEFT);\n    if (!isnan(activeOffsetXEnd)) horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n    if (horizontalDirections.length === 2) horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n    directions = directions.concat(horizontalDirections);\n    let verticalDirections = [];\n    if (!isnan(activeOffsetYStart)) verticalDirections.push(Hammer.DIRECTION_UP);\n    if (!isnan(activeOffsetYEnd)) verticalDirections.push(Hammer.DIRECTION_DOWN);\n    if (verticalDirections.length === 2) verticalDirections = [Hammer.DIRECTION_VERTICAL];\n    directions = directions.concat(verticalDirections);\n\n    if (!directions.length) {\n      return Hammer.DIRECTION_NONE;\n    }\n\n    if (directions[0] === Hammer.DIRECTION_HORIZONTAL && directions[1] === Hammer.DIRECTION_VERTICAL) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    if (horizontalDirections.length && verticalDirections.length) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    return directions[0];\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        minDistSq: 10\n      };\n    }\n\n    return this.config;\n  }\n\n  shouldFailUnderCustomCriteria({\n    deltaX,\n    deltaY\n  }, criteria) {\n    return !isnan(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !isnan(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n  }\n\n  shouldActivateUnderCustomCriteria({\n    deltaX,\n    deltaY,\n    velocity\n  }, criteria) {\n    return !isnan(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !isnan(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !isnan(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !isnan(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({\n      x: deltaX,\n      y: deltaY\n    }), criteria.minDistSq) || TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) || TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) || TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq);\n  }\n\n  shouldMultiFingerPanFail({\n    pointerLength,\n    scale,\n    deltaRotation\n  }) {\n    if (pointerLength <= 1) {\n      return false;\n    } // Test if the pan had too much pinching or rotating.\n\n\n    const deltaScale = Math.abs(scale - 1);\n    const absDeltaRotation = Math.abs(deltaRotation);\n\n    if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n\n    if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n\n    return false;\n  }\n\n  updateHasCustomActivationCriteria(criteria) {\n    return isValidNumber(criteria.minDistSq) || isValidNumber(criteria.minVelocityX) || isValidNumber(criteria.minVelocityY) || isValidNumber(criteria.minVelocitySq) || isValidNumber(criteria.activeOffsetXStart) || isValidNumber(criteria.activeOffsetXEnd) || isValidNumber(criteria.activeOffsetYStart) || isValidNumber(criteria.activeOffsetYEnd);\n  }\n\n  isGestureEnabledForEvent(props, _recognizer, inputData) {\n    if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n      return {\n        failed: true\n      };\n    }\n\n    const velocity = {\n      x: inputData.velocityX,\n      y: inputData.velocityY\n    };\n\n    if (this.hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n      deltaX: inputData.deltaX,\n      deltaY: inputData.deltaY,\n      velocity\n    }, props)) {\n      if (this.shouldMultiFingerPanFail({\n        pointerLength: inputData.maxPointers,\n        scale: inputData.scale,\n        deltaRotation: inputData.deltaRotation\n      })) {\n        return {\n          failed: true\n        };\n      }\n\n      return {\n        success: true\n      };\n    }\n\n    return {\n      success: false\n    };\n  }\n\n}\n\nexport default PanGestureHandler;\n//# sourceMappingURL=PanGestureHandler.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}