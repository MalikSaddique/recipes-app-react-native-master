{"ast":null,"code":"import { isJestEnv } from \"../utils\";\nexport var handlerIDToTag = {};\nvar gestures = new Map();\nvar oldHandlers = new Map();\nvar testIDs = new Map();\nvar handlerTag = 1;\nexport function getNextHandlerTag() {\n  return handlerTag++;\n}\nexport function registerHandler(handlerTag, handler, testID) {\n  gestures.set(handlerTag, handler);\n  if (isJestEnv() && testID) {\n    testIDs.set(testID, handlerTag);\n  }\n}\nexport function registerOldGestureHandler(handlerTag, handler) {\n  oldHandlers.set(handlerTag, handler);\n}\nexport function unregisterHandler(handlerTag, testID) {\n  gestures.delete(handlerTag);\n  if (isJestEnv() && testID) {\n    testIDs.delete(testID);\n  }\n}\nexport function findHandler(handlerTag) {\n  return gestures.get(handlerTag);\n}\nexport function findOldGestureHandler(handlerTag) {\n  return oldHandlers.get(handlerTag);\n}\nexport function findHandlerByTestID(testID) {\n  var handlerTag = testIDs.get(testID);\n  if (handlerTag !== undefined) {\n    var _findHandler;\n    return (_findHandler = findHandler(handlerTag)) !== null && _findHandler !== void 0 ? _findHandler : null;\n  }\n  return null;\n}","map":{"version":3,"names":["isJestEnv","handlerIDToTag","gestures","Map","oldHandlers","testIDs","handlerTag","getNextHandlerTag","registerHandler","handler","testID","set","registerOldGestureHandler","unregisterHandler","delete","findHandler","get","findOldGestureHandler","findHandlerByTestID","undefined","_findHandler"],"sources":["C:/Users/A S Computer/recipes-app-react-native-master/node_modules/react-native-gesture-handler/lib/module/handlers/handlersRegistry.js"],"sourcesContent":["import { isJestEnv } from '../utils';\nexport const handlerIDToTag = {};\nconst gestures = new Map();\nconst oldHandlers = new Map();\nconst testIDs = new Map();\nlet handlerTag = 1;\nexport function getNextHandlerTag() {\n  return handlerTag++;\n}\nexport function registerHandler(handlerTag, handler, testID) {\n  gestures.set(handlerTag, handler);\n\n  if (isJestEnv() && testID) {\n    testIDs.set(testID, handlerTag);\n  }\n}\nexport function registerOldGestureHandler(handlerTag, handler) {\n  oldHandlers.set(handlerTag, handler);\n}\nexport function unregisterHandler(handlerTag, testID) {\n  gestures.delete(handlerTag);\n\n  if (isJestEnv() && testID) {\n    testIDs.delete(testID);\n  }\n}\nexport function findHandler(handlerTag) {\n  return gestures.get(handlerTag);\n}\nexport function findOldGestureHandler(handlerTag) {\n  return oldHandlers.get(handlerTag);\n}\nexport function findHandlerByTestID(testID) {\n  const handlerTag = testIDs.get(testID);\n\n  if (handlerTag !== undefined) {\n    var _findHandler;\n\n    return (_findHandler = findHandler(handlerTag)) !== null && _findHandler !== void 0 ? _findHandler : null;\n  }\n\n  return null;\n}\n//# sourceMappingURL=handlersRegistry.js.map"],"mappings":"AAAA,SAASA,SAAS;AAClB,OAAO,IAAMC,cAAc,GAAG,CAAC,CAAC;AAChC,IAAMC,QAAQ,GAAG,IAAIC,GAAG,EAAE;AAC1B,IAAMC,WAAW,GAAG,IAAID,GAAG,EAAE;AAC7B,IAAME,OAAO,GAAG,IAAIF,GAAG,EAAE;AACzB,IAAIG,UAAU,GAAG,CAAC;AAClB,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAClC,OAAOD,UAAU,EAAE;AACrB;AACA,OAAO,SAASE,eAAeA,CAACF,UAAU,EAAEG,OAAO,EAAEC,MAAM,EAAE;EAC3DR,QAAQ,CAACS,GAAG,CAACL,UAAU,EAAEG,OAAO,CAAC;EAEjC,IAAIT,SAAS,EAAE,IAAIU,MAAM,EAAE;IACzBL,OAAO,CAACM,GAAG,CAACD,MAAM,EAAEJ,UAAU,CAAC;EACjC;AACF;AACA,OAAO,SAASM,yBAAyBA,CAACN,UAAU,EAAEG,OAAO,EAAE;EAC7DL,WAAW,CAACO,GAAG,CAACL,UAAU,EAAEG,OAAO,CAAC;AACtC;AACA,OAAO,SAASI,iBAAiBA,CAACP,UAAU,EAAEI,MAAM,EAAE;EACpDR,QAAQ,CAACY,MAAM,CAACR,UAAU,CAAC;EAE3B,IAAIN,SAAS,EAAE,IAAIU,MAAM,EAAE;IACzBL,OAAO,CAACS,MAAM,CAACJ,MAAM,CAAC;EACxB;AACF;AACA,OAAO,SAASK,WAAWA,CAACT,UAAU,EAAE;EACtC,OAAOJ,QAAQ,CAACc,GAAG,CAACV,UAAU,CAAC;AACjC;AACA,OAAO,SAASW,qBAAqBA,CAACX,UAAU,EAAE;EAChD,OAAOF,WAAW,CAACY,GAAG,CAACV,UAAU,CAAC;AACpC;AACA,OAAO,SAASY,mBAAmBA,CAACR,MAAM,EAAE;EAC1C,IAAMJ,UAAU,GAAGD,OAAO,CAACW,GAAG,CAACN,MAAM,CAAC;EAEtC,IAAIJ,UAAU,KAAKa,SAAS,EAAE;IAC5B,IAAIC,YAAY;IAEhB,OAAO,CAACA,YAAY,GAAGL,WAAW,CAACT,UAAU,CAAC,MAAM,IAAI,IAAIc,YAAY,KAAK,KAAK,CAAC,GAAGA,YAAY,GAAG,IAAI;EAC3G;EAEA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}