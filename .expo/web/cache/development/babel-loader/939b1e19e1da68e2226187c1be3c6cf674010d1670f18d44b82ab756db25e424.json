{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar gestures = {};\nexport function getHandler(tag) {\n  if (tag in gestures) return gestures[tag];\n  throw new Error(\"No handler for tag \" + tag);\n}\nexport function createGestureHandler(handlerTag, handler) {\n  if (handlerTag in gestures) {\n    throw new Error(\"Handler with tag \" + handlerTag + \" already exists\");\n  }\n  gestures[handlerTag] = handler;\n  gestures[handlerTag].handlerTag = handlerTag;\n}\nexport function dropGestureHandler(handlerTag) {\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  delete gestures[handlerTag];\n}\nexport function getNodes() {\n  return _objectSpread({}, gestures);\n}","map":{"version":3,"names":["gestures","getHandler","tag","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","destroy","getNodes","_objectSpread"],"sources":["C:/Users/A S Computer/recipes-app-react-native-master/node_modules/react-native-gesture-handler/lib/module/web/NodeManager.js"],"sourcesContent":["const gestures = {};\nexport function getHandler(tag) {\n  if (tag in gestures) return gestures[tag];\n  throw new Error(`No handler for tag ${tag}`);\n}\nexport function createGestureHandler(handlerTag, handler) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n\n  gestures[handlerTag] = handler; // @ts-ignore no types for web handlers yet\n\n  gestures[handlerTag].handlerTag = handlerTag;\n}\nexport function dropGestureHandler(handlerTag) {\n  // Since React 18, there are cases where componentWillUnmount gets called twice in a row\n  // so skip this if the tag was already removed.\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n\n  getHandler(handlerTag).destroy(); // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n\n  delete gestures[handlerTag];\n}\nexport function getNodes() {\n  return { ...gestures\n  };\n}\n//# sourceMappingURL=NodeManager.js.map"],"mappings":";;;AAAA,IAAMA,QAAQ,GAAG,CAAC,CAAC;AACnB,OAAO,SAASC,UAAUA,CAACC,GAAG,EAAE;EAC9B,IAAIA,GAAG,IAAIF,QAAQ,EAAE,OAAOA,QAAQ,CAACE,GAAG,CAAC;EACzC,MAAM,IAAIC,KAAK,yBAAuBD,GAAG,CAAG;AAC9C;AACA,OAAO,SAASE,oBAAoBA,CAACC,UAAU,EAAEC,OAAO,EAAE;EACxD,IAAID,UAAU,IAAIL,QAAQ,EAAE;IAC1B,MAAM,IAAIG,KAAK,uBAAqBE,UAAU,qBAAkB;EAClE;EAEAL,QAAQ,CAACK,UAAU,CAAC,GAAGC,OAAO;EAE9BN,QAAQ,CAACK,UAAU,CAAC,CAACA,UAAU,GAAGA,UAAU;AAC9C;AACA,OAAO,SAASE,kBAAkBA,CAACF,UAAU,EAAE;EAG7C,IAAI,EAAEA,UAAU,IAAIL,QAAQ,CAAC,EAAE;IAC7B;EACF;EAEAC,UAAU,CAACI,UAAU,CAAC,CAACG,OAAO,EAAE;EAEhC,OAAOR,QAAQ,CAACK,UAAU,CAAC;AAC7B;AACA,OAAO,SAASI,QAAQA,CAAA,EAAG;EACzB,OAAAC,aAAA,KAAYV,QAAQ;AAEtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}