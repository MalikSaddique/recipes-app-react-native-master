{"ast":null,"code":"import { Direction } from \"./web/constants\";\nimport FlingGestureHandler from \"./web/FlingGestureHandler\";\nimport LongPressGestureHandler from \"./web/LongPressGestureHandler\";\nimport NativeViewGestureHandler from \"./web/NativeViewGestureHandler\";\nimport * as NodeManager from \"./web/NodeManager\";\nimport PanGestureHandler from \"./web/PanGestureHandler\";\nimport PinchGestureHandler from \"./web/PinchGestureHandler\";\nimport RotationGestureHandler from \"./web/RotationGestureHandler\";\nimport TapGestureHandler from \"./web/TapGestureHandler\";\nexport var Gestures = {\n  PanGestureHandler: PanGestureHandler,\n  RotationGestureHandler: RotationGestureHandler,\n  PinchGestureHandler: PinchGestureHandler,\n  TapGestureHandler: TapGestureHandler,\n  NativeViewGestureHandler: NativeViewGestureHandler,\n  LongPressGestureHandler: LongPressGestureHandler,\n  FlingGestureHandler: FlingGestureHandler\n};\nexport default {\n  Direction: Direction,\n  handleSetJSResponder: function handleSetJSResponder(tag, blockNativeResponder) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder: function handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler: function createGestureHandler(handlerName, handlerTag, config) {\n    if (!(handlerName in Gestures)) throw new Error(\"react-native-gesture-handler: \" + handlerName + \" is not supported on web.\");\n    var GestureClass = Gestures[handlerName];\n    NodeManager.createGestureHandler(handlerTag, new GestureClass());\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler: function attachGestureHandler(handlerTag, newView, _actionType, propsRef) {\n    NodeManager.getHandler(handlerTag).setView(newView, propsRef);\n  },\n  updateGestureHandler: function updateGestureHandler(handlerTag, newConfig) {\n    NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n  },\n  getGestureHandlerNode: function getGestureHandlerNode(handlerTag) {\n    return NodeManager.getHandler(handlerTag);\n  },\n  dropGestureHandler: function dropGestureHandler(handlerTag) {\n    NodeManager.dropGestureHandler(handlerTag);\n  },\n  flushOperations: function flushOperations() {}\n};","map":{"version":3,"names":["Direction","FlingGestureHandler","LongPressGestureHandler","NativeViewGestureHandler","NodeManager","PanGestureHandler","PinchGestureHandler","RotationGestureHandler","TapGestureHandler","Gestures","handleSetJSResponder","tag","blockNativeResponder","console","warn","handleClearJSResponder","createGestureHandler","handlerName","handlerTag","config","Error","GestureClass","updateGestureHandler","attachGestureHandler","newView","_actionType","propsRef","getHandler","setView","newConfig","updateGestureConfig","getGestureHandlerNode","dropGestureHandler","flushOperations"],"sources":["C:/Users/A S Computer/recipes-app-react-native-master/node_modules/react-native-gesture-handler/lib/module/RNGestureHandlerModule.web.js"],"sourcesContent":["import { Direction } from './web/constants';\nimport FlingGestureHandler from './web/FlingGestureHandler';\nimport LongPressGestureHandler from './web/LongPressGestureHandler';\nimport NativeViewGestureHandler from './web/NativeViewGestureHandler';\nimport * as NodeManager from './web/NodeManager';\nimport PanGestureHandler from './web/PanGestureHandler';\nimport PinchGestureHandler from './web/PinchGestureHandler';\nimport RotationGestureHandler from './web/RotationGestureHandler';\nimport TapGestureHandler from './web/TapGestureHandler';\nexport const Gestures = {\n  PanGestureHandler,\n  RotationGestureHandler,\n  PinchGestureHandler,\n  TapGestureHandler,\n  NativeViewGestureHandler,\n  LongPressGestureHandler,\n  FlingGestureHandler // ForceTouchGestureHandler,\n\n};\nexport default {\n  Direction,\n\n  handleSetJSResponder(tag, blockNativeResponder) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n\n  handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n\n  createGestureHandler(handlerName, handlerTag, config) {\n    //TODO(TS) extends config\n    if (!(handlerName in Gestures)) throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);\n    const GestureClass = Gestures[handlerName];\n    NodeManager.createGestureHandler(handlerTag, new GestureClass());\n    this.updateGestureHandler(handlerTag, config);\n  },\n\n  attachGestureHandler(handlerTag, newView, _actionType, propsRef) {\n    NodeManager.getHandler(handlerTag).setView(newView, propsRef);\n  },\n\n  updateGestureHandler(handlerTag, newConfig) {\n    NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n  },\n\n  getGestureHandlerNode(handlerTag) {\n    return NodeManager.getHandler(handlerTag);\n  },\n\n  dropGestureHandler(handlerTag) {\n    NodeManager.dropGestureHandler(handlerTag);\n  },\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  flushOperations() {}\n\n};\n//# sourceMappingURL=RNGestureHandlerModule.web.js.map"],"mappings":"AAAA,SAASA,SAAS;AAClB,OAAOC,mBAAmB;AAC1B,OAAOC,uBAAuB;AAC9B,OAAOC,wBAAwB;AAC/B,OAAO,KAAKC,WAAW;AACvB,OAAOC,iBAAiB;AACxB,OAAOC,mBAAmB;AAC1B,OAAOC,sBAAsB;AAC7B,OAAOC,iBAAiB;AACxB,OAAO,IAAMC,QAAQ,GAAG;EACtBJ,iBAAiB,EAAjBA,iBAAiB;EACjBE,sBAAsB,EAAtBA,sBAAsB;EACtBD,mBAAmB,EAAnBA,mBAAmB;EACnBE,iBAAiB,EAAjBA,iBAAiB;EACjBL,wBAAwB,EAAxBA,wBAAwB;EACxBD,uBAAuB,EAAvBA,uBAAuB;EACvBD,mBAAmB,EAAnBA;AAEF,CAAC;AACD,eAAe;EACbD,SAAS,EAATA,SAAS;EAETU,oBAAoB,WAAAA,qBAACC,GAAG,EAAEC,oBAAoB,EAAE;IAC9CC,OAAO,CAACC,IAAI,CAAC,wBAAwB,EAAEH,GAAG,EAAEC,oBAAoB,CAAC;EACnE,CAAC;EAEDG,sBAAsB,WAAAA,uBAAA,EAAG;IACvBF,OAAO,CAACC,IAAI,CAAC,0BAA0B,CAAC;EAC1C,CAAC;EAEDE,oBAAoB,WAAAA,qBAACC,WAAW,EAAEC,UAAU,EAAEC,MAAM,EAAE;IAEpD,IAAI,EAAEF,WAAW,IAAIR,QAAQ,CAAC,EAAE,MAAM,IAAIW,KAAK,oCAAkCH,WAAW,+BAA4B;IACxH,IAAMI,YAAY,GAAGZ,QAAQ,CAACQ,WAAW,CAAC;IAC1Cb,WAAW,CAACY,oBAAoB,CAACE,UAAU,EAAE,IAAIG,YAAY,EAAE,CAAC;IAChE,IAAI,CAACC,oBAAoB,CAACJ,UAAU,EAAEC,MAAM,CAAC;EAC/C,CAAC;EAEDI,oBAAoB,WAAAA,qBAACL,UAAU,EAAEM,OAAO,EAAEC,WAAW,EAAEC,QAAQ,EAAE;IAC/DtB,WAAW,CAACuB,UAAU,CAACT,UAAU,CAAC,CAACU,OAAO,CAACJ,OAAO,EAAEE,QAAQ,CAAC;EAC/D,CAAC;EAEDJ,oBAAoB,WAAAA,qBAACJ,UAAU,EAAEW,SAAS,EAAE;IAC1CzB,WAAW,CAACuB,UAAU,CAACT,UAAU,CAAC,CAACY,mBAAmB,CAACD,SAAS,CAAC;EACnE,CAAC;EAEDE,qBAAqB,WAAAA,sBAACb,UAAU,EAAE;IAChC,OAAOd,WAAW,CAACuB,UAAU,CAACT,UAAU,CAAC;EAC3C,CAAC;EAEDc,kBAAkB,WAAAA,mBAACd,UAAU,EAAE;IAC7Bd,WAAW,CAAC4B,kBAAkB,CAACd,UAAU,CAAC;EAC5C,CAAC;EAGDe,eAAe,WAAAA,gBAAA,EAAG,CAAC;AAErB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}