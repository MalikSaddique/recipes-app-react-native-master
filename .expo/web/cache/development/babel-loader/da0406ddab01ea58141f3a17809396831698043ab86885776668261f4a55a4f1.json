{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport createHandler from \"./createHandler\";\nimport { baseGestureHandlerProps } from \"./gestureHandlerCommon\";\nexport var panGestureHandlerProps = ['activeOffsetY', 'activeOffsetX', 'failOffsetY', 'failOffsetX', 'minDist', 'minVelocity', 'minVelocityX', 'minVelocityY', 'minPointers', 'maxPointers', 'avgTouches', 'enableTrackpadTwoFingerGesture', 'activateAfterLongPress'];\nexport var panGestureHandlerCustomNativeProps = ['activeOffsetYStart', 'activeOffsetYEnd', 'activeOffsetXStart', 'activeOffsetXEnd', 'failOffsetYStart', 'failOffsetYEnd', 'failOffsetXStart', 'failOffsetXEnd'];\nexport var panHandlerName = 'PanGestureHandler';\nexport var PanGestureHandler = createHandler({\n  name: panHandlerName,\n  allowedProps: [].concat(_toConsumableArray(baseGestureHandlerProps), panGestureHandlerProps),\n  config: {},\n  transformProps: managePanProps,\n  customNativeProps: panGestureHandlerCustomNativeProps\n});\nfunction validatePanGestureHandlerProps(props) {\n  if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n    throw new Error(\"First element of activeOffsetX should be negative, a the second one should be positive\");\n  }\n  if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n    throw new Error(\"First element of activeOffsetY should be negative, a the second one should be positive\");\n  }\n  if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n    throw new Error(\"First element of failOffsetX should be negative, a the second one should be positive\");\n  }\n  if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n    throw new Error(\"First element of failOffsetY should be negative, a the second one should be positive\");\n  }\n  if (props.minDist && (props.failOffsetX || props.failOffsetY)) {\n    throw new Error(\"It is not supported to use minDist with failOffsetX or failOffsetY, use activeOffsetX and activeOffsetY instead\");\n  }\n  if (props.minDist && (props.activeOffsetX || props.activeOffsetY)) {\n    throw new Error(\"It is not supported to use minDist with activeOffsetX or activeOffsetY\");\n  }\n}\nfunction transformPanGestureHandlerProps(props) {\n  var res = _objectSpread({}, props);\n  if (props.activeOffsetX !== undefined) {\n    delete res.activeOffsetX;\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n  if (props.activeOffsetY !== undefined) {\n    delete res.activeOffsetY;\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n  if (props.failOffsetX !== undefined) {\n    delete res.failOffsetX;\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n  if (props.failOffsetY !== undefined) {\n    delete res.failOffsetY;\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n  return res;\n}\nexport function managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}","map":{"version":3,"names":["createHandler","baseGestureHandlerProps","panGestureHandlerProps","panGestureHandlerCustomNativeProps","panHandlerName","PanGestureHandler","name","allowedProps","concat","_toConsumableArray","config","transformProps","managePanProps","customNativeProps","validatePanGestureHandlerProps","props","Array","isArray","activeOffsetX","Error","activeOffsetY","failOffsetX","failOffsetY","minDist","transformPanGestureHandlerProps","res","_objectSpread","undefined","activeOffsetXStart","activeOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","failOffsetXStart","failOffsetXEnd","failOffsetYStart","failOffsetYEnd","__DEV__"],"sources":["C:/Users/A S Computer/recipes-app-react-native-master/node_modules/react-native-gesture-handler/lib/module/handlers/PanGestureHandler.js"],"sourcesContent":["import createHandler from './createHandler';\nimport { baseGestureHandlerProps } from './gestureHandlerCommon';\nexport const panGestureHandlerProps = ['activeOffsetY', 'activeOffsetX', 'failOffsetY', 'failOffsetX', 'minDist', 'minVelocity', 'minVelocityX', 'minVelocityY', 'minPointers', 'maxPointers', 'avgTouches', 'enableTrackpadTwoFingerGesture', 'activateAfterLongPress'];\nexport const panGestureHandlerCustomNativeProps = ['activeOffsetYStart', 'activeOffsetYEnd', 'activeOffsetXStart', 'activeOffsetXEnd', 'failOffsetYStart', 'failOffsetYEnd', 'failOffsetXStart', 'failOffsetXEnd'];\nexport const panHandlerName = 'PanGestureHandler';\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const PanGestureHandler = createHandler({\n  name: panHandlerName,\n  allowedProps: [...baseGestureHandlerProps, ...panGestureHandlerProps],\n  config: {},\n  transformProps: managePanProps,\n  customNativeProps: panGestureHandlerCustomNativeProps\n});\n\nfunction validatePanGestureHandlerProps(props) {\n  if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n    throw new Error(`First element of activeOffsetX should be negative, a the second one should be positive`);\n  }\n\n  if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n    throw new Error(`First element of activeOffsetY should be negative, a the second one should be positive`);\n  }\n\n  if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n    throw new Error(`First element of failOffsetX should be negative, a the second one should be positive`);\n  }\n\n  if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n    throw new Error(`First element of failOffsetY should be negative, a the second one should be positive`);\n  }\n\n  if (props.minDist && (props.failOffsetX || props.failOffsetY)) {\n    throw new Error(`It is not supported to use minDist with failOffsetX or failOffsetY, use activeOffsetX and activeOffsetY instead`);\n  }\n\n  if (props.minDist && (props.activeOffsetX || props.activeOffsetY)) {\n    throw new Error(`It is not supported to use minDist with activeOffsetX or activeOffsetY`);\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  const res = { ...props\n  };\n\n  if (props.activeOffsetX !== undefined) {\n    delete res.activeOffsetX;\n\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res.activeOffsetY;\n\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res.failOffsetX;\n\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res.failOffsetY;\n\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nexport function managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n\n  return transformPanGestureHandlerProps(props);\n}\n//# sourceMappingURL=PanGestureHandler.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}