{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport pack from 'react-native/package.json';\nvar rnVersion = pack.version;\nexport function toArray(object) {\n  if (!Array.isArray(object)) {\n    return [object];\n  }\n  return object;\n}\nexport function withPrevAndCurrent(array, mapFn) {\n  var previousArr = [null];\n  var currentArr = _toConsumableArray(array);\n  var transformedArr = [];\n  currentArr.forEach(function (current, i) {\n    var previous = previousArr[i];\n    var transformed = mapFn(previous, current);\n    previousArr.push(transformed);\n    transformedArr.push(transformed);\n  });\n  return transformedArr;\n}\nexport function hasProperty(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\nexport function isJestEnv() {\n  return hasProperty(global, 'process') && !!process.env.JEST_WORKER_ID;\n}\nexport function tagMessage(msg) {\n  return \"[react-native-gesture-handler] \" + msg;\n}\nexport function isFabric() {\n  var _global;\n  return !!((_global = global) !== null && _global !== void 0 && _global.nativeFabricUIManager);\n}\nexport function shouldUseCodegenNativeComponent() {\n  var _rnVersion$split = rnVersion.split('.'),\n    _rnVersion$split2 = _slicedToArray(_rnVersion$split, 2),\n    majorStr = _rnVersion$split2[0],\n    minorStr = _rnVersion$split2[1];\n  var major = Number.parseInt(majorStr);\n  var minor = Number.parseInt(minorStr);\n  return minor >= 68 || major > 0;\n}\nexport function isRemoteDebuggingEnabled() {\n  return !global.nativeCallSyncHook || global.__REMOTEDEV__;\n}","map":{"version":3,"names":["pack","rnVersion","version","toArray","object","Array","isArray","withPrevAndCurrent","array","mapFn","previousArr","currentArr","_toConsumableArray","transformedArr","forEach","current","i","previous","transformed","push","hasProperty","key","Object","prototype","hasOwnProperty","call","isJestEnv","global","process","env","JEST_WORKER_ID","tagMessage","msg","isFabric","_global","nativeFabricUIManager","shouldUseCodegenNativeComponent","_rnVersion$split","split","_rnVersion$split2","_slicedToArray","majorStr","minorStr","major","Number","parseInt","minor","isRemoteDebuggingEnabled","nativeCallSyncHook","__REMOTEDEV__"],"sources":["C:/Users/A S Computer/recipes-app-react-native-master/node_modules/react-native-gesture-handler/lib/module/utils.js"],"sourcesContent":["import pack from 'react-native/package.json';\nconst rnVersion = pack.version;\nexport function toArray(object) {\n  if (!Array.isArray(object)) {\n    return [object];\n  }\n\n  return object;\n}\nexport function withPrevAndCurrent(array, mapFn) {\n  const previousArr = [null];\n  const currentArr = [...array];\n  const transformedArr = [];\n  currentArr.forEach((current, i) => {\n    const previous = previousArr[i];\n    const transformed = mapFn(previous, current);\n    previousArr.push(transformed);\n    transformedArr.push(transformed);\n  });\n  return transformedArr;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\nexport function hasProperty(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\nexport function isJestEnv() {\n  // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n  return hasProperty(global, 'process') && !!process.env.JEST_WORKER_ID;\n}\nexport function tagMessage(msg) {\n  return `[react-native-gesture-handler] ${msg}`;\n} // helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n// may not be initialized before the first render\n\nexport function isFabric() {\n  var _global;\n\n  // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n  return !!((_global = global) !== null && _global !== void 0 && _global.nativeFabricUIManager);\n}\nexport function shouldUseCodegenNativeComponent() {\n  const [majorStr, minorStr] = rnVersion.split('.');\n  const major = Number.parseInt(majorStr);\n  const minor = Number.parseInt(minorStr); // use codegenNativeComponent starting with RN 0.68\n\n  return minor >= 68 || major > 0;\n}\nexport function isRemoteDebuggingEnabled() {\n  // react-native-reanimated checks if in remote debugging in the same way\n  // @ts-ignore global is available but node types are not included\n  return !global.nativeCallSyncHook || global.__REMOTEDEV__;\n}\n//# sourceMappingURL=utils.js.map"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,2BAA2B;AAC5C,IAAMC,SAAS,GAAGD,IAAI,CAACE,OAAO;AAC9B,OAAO,SAASC,OAAOA,CAACC,MAAM,EAAE;EAC9B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,EAAE;IAC1B,OAAO,CAACA,MAAM,CAAC;EACjB;EAEA,OAAOA,MAAM;AACf;AACA,OAAO,SAASG,kBAAkBA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC/C,IAAMC,WAAW,GAAG,CAAC,IAAI,CAAC;EAC1B,IAAMC,UAAU,GAAAC,kBAAA,CAAOJ,KAAK,CAAC;EAC7B,IAAMK,cAAc,GAAG,EAAE;EACzBF,UAAU,CAACG,OAAO,CAAC,UAACC,OAAO,EAAEC,CAAC,EAAK;IACjC,IAAMC,QAAQ,GAAGP,WAAW,CAACM,CAAC,CAAC;IAC/B,IAAME,WAAW,GAAGT,KAAK,CAACQ,QAAQ,EAAEF,OAAO,CAAC;IAC5CL,WAAW,CAACS,IAAI,CAACD,WAAW,CAAC;IAC7BL,cAAc,CAACM,IAAI,CAACD,WAAW,CAAC;EAClC,CAAC,CAAC;EACF,OAAOL,cAAc;AACvB;AAEA,OAAO,SAASO,WAAWA,CAAChB,MAAM,EAAEiB,GAAG,EAAE;EACvC,OAAOC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACrB,MAAM,EAAEiB,GAAG,CAAC;AAC1D;AACA,OAAO,SAASK,SAASA,CAAA,EAAG;EAE1B,OAAON,WAAW,CAACO,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,CAACC,OAAO,CAACC,GAAG,CAACC,cAAc;AACvE;AACA,OAAO,SAASC,UAAUA,CAACC,GAAG,EAAE;EAC9B,2CAAyCA,GAAG;AAC9C;AAGA,OAAO,SAASC,QAAQA,CAAA,EAAG;EACzB,IAAIC,OAAO;EAGX,OAAO,CAAC,EAAE,CAACA,OAAO,GAAGP,MAAM,MAAM,IAAI,IAAIO,OAAO,KAAK,KAAK,CAAC,IAAIA,OAAO,CAACC,qBAAqB,CAAC;AAC/F;AACA,OAAO,SAASC,+BAA+BA,CAAA,EAAG;EAChD,IAAAC,gBAAA,GAA6BpC,SAAS,CAACqC,KAAK,CAAC,GAAG,CAAC;IAAAC,iBAAA,GAAAC,cAAA,CAAAH,gBAAA;IAA1CI,QAAQ,GAAAF,iBAAA;IAAEG,QAAQ,GAAAH,iBAAA;EACzB,IAAMI,KAAK,GAAGC,MAAM,CAACC,QAAQ,CAACJ,QAAQ,CAAC;EACvC,IAAMK,KAAK,GAAGF,MAAM,CAACC,QAAQ,CAACH,QAAQ,CAAC;EAEvC,OAAOI,KAAK,IAAI,EAAE,IAAIH,KAAK,GAAG,CAAC;AACjC;AACA,OAAO,SAASI,wBAAwBA,CAAA,EAAG;EAGzC,OAAO,CAACpB,MAAM,CAACqB,kBAAkB,IAAIrB,MAAM,CAACsB,aAAa;AAC3D"},"metadata":{},"sourceType":"module","externalDependencies":[]}