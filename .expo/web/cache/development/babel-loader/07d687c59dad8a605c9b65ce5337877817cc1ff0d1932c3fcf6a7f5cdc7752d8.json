{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { getIngredientName, getCategoryName, getCategoryById } from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport ViewIngredientsButton from \"../../components/ViewIngredientsButton/ViewIngredientsButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  viewportWidth = _Dimensions$get.width;\nexport default function RecipeScreen(props) {\n  var _route$params;\n  var navigation = props.navigation,\n    route = props.route;\n  var item = (_route$params = route.params) == null ? void 0 : _route$params.item;\n  var category = getCategoryById(item.categoryId);\n  var title = getCategoryName(category.id);\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeSlide = _useState2[0],\n    setActiveSlide = _useState2[1];\n  var slider1Ref = useRef();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerTransparent: \"true\",\n      headerLeft: function headerLeft() {\n        return _jsx(BackButton, {\n          onPress: function onPress() {\n            navigation.goBack();\n          }\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(View, {});\n      }\n    });\n  }, []);\n  var renderImage = function renderImage(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableHighlight, {\n      children: _jsx(View, {\n        style: styles.imageContainer,\n        children: _jsx(Image, {\n          style: styles.image,\n          source: {\n            uri: item\n          }\n        })\n      })\n    });\n  };\n  var onPressIngredient = function onPressIngredient(item) {\n    var name = getIngredientName(item);\n    var ingredient = item;\n    navigation.navigate(\"Ingredient\", {\n      ingredient: ingredient,\n      name: name\n    });\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.carouselContainer,\n      children: _jsxs(View, {\n        style: styles.carousel,\n        children: [_jsx(Carousel, {\n          ref: slider1Ref,\n          data: item.photosArray,\n          renderItem: renderImage,\n          sliderWidth: viewportWidth,\n          itemWidth: viewportWidth,\n          inactiveSlideScale: 1,\n          inactiveSlideOpacity: 1,\n          firstItem: 0,\n          loop: false,\n          autoplay: false,\n          autoplayDelay: 500,\n          autoplayInterval: 3000,\n          onSnapToItem: function onSnapToItem(index) {\n            return setActiveSlide(0);\n          }\n        }), _jsx(Pagination, {\n          dotsLength: item.photosArray.length,\n          activeDotIndex: activeSlide,\n          containerStyle: styles.paginationContainer,\n          dotColor: \"rgba(255, 255, 255, 0.92)\",\n          dotStyle: styles.paginationDot,\n          inactiveDotColor: \"white\",\n          inactiveDotOpacity: 0.4,\n          inactiveDotScale: 0.6,\n          carouselRef: slider1Ref.current,\n          tappableDots: !!slider1Ref.current\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.infoRecipeContainer,\n      children: [_jsx(Text, {\n        style: styles.infoRecipeName,\n        children: item.title\n      }), _jsx(View, {\n        style: styles.infoContainer,\n        children: _jsx(TouchableHighlight, {\n          onPress: function onPress() {\n            return navigation.navigate(\"RecipesList\", {\n              category: category,\n              title: title\n            });\n          },\n          children: _jsx(Text, {\n            style: styles.category,\n            children: getCategoryName(item.categoryId).toUpperCase()\n          })\n        })\n      }), _jsxs(View, {\n        style: styles.infoContainer,\n        children: [_jsx(Image, {\n          style: styles.infoPhoto,\n          source: require(\"../../../assets/icons/time.png\")\n        }), _jsxs(Text, {\n          style: styles.infoRecipe,\n          children: [item.time, \" minutes \"]\n        })]\n      }), _jsx(View, {\n        style: styles.infoContainer,\n        children: _jsx(ViewIngredientsButton, {\n          onPress: function onPress() {\n            var ingredients = item.ingredients;\n            var title = \"Ingredients for \" + item.title;\n            navigation.navigate(\"IngredientsDetails\", {\n              ingredients: ingredients,\n              title: title\n            });\n          }\n        })\n      }), _jsx(View, {\n        style: styles.infoContainer,\n        children: _jsx(Text, {\n          style: styles.infoDescriptionRecipe,\n          children: item.description\n        })\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useLayoutEffect","useRef","useState","ScrollView","Text","View","Image","Dimensions","TouchableHighlight","styles","getIngredientName","getCategoryName","getCategoryById","BackButton","ViewIngredientsButton","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","viewportWidth","width","RecipeScreen","props","_route$params","navigation","route","item","params","category","categoryId","title","id","_useState","_useState2","_slicedToArray","activeSlide","setActiveSlide","slider1Ref","setOptions","headerTransparent","headerLeft","onPress","goBack","headerRight","renderImage","_ref","children","style","imageContainer","image","source","uri","onPressIngredient","name","ingredient","navigate","container","carouselContainer","carousel","Carousel","ref","data","photosArray","renderItem","sliderWidth","itemWidth","inactiveSlideScale","inactiveSlideOpacity","firstItem","loop","autoplay","autoplayDelay","autoplayInterval","onSnapToItem","index","Pagination","dotsLength","length","activeDotIndex","containerStyle","paginationContainer","dotColor","dotStyle","paginationDot","inactiveDotColor","inactiveDotOpacity","inactiveDotScale","carouselRef","current","tappableDots","infoRecipeContainer","infoRecipeName","infoContainer","toUpperCase","infoPhoto","require","infoRecipe","time","ingredients","infoDescriptionRecipe","description"],"sources":["C:/Users/A S Computer/recipes-app-react-native-master/src/screens/Recipe/RecipeScreen.js"],"sourcesContent":["import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport {\n  ScrollView,\n  Text,\n  View,\n  Image,\n  Dimensions,\n  TouchableHighlight,\n} from \"react-native\";\nimport styles from \"./styles\";\nimport {\n  getIngredientName,\n  getCategoryName,\n  getCategoryById,\n} from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport ViewIngredientsButton from \"../../components/ViewIngredientsButton/ViewIngredientsButton\";\n\nconst { width: viewportWidth } = Dimensions.get(\"window\");\n\nexport default function RecipeScreen(props) {\n  const { navigation, route } = props;\n\n  const item = route.params?.item;\n  const category = getCategoryById(item.categoryId);\n  const title = getCategoryName(category.id);\n\n  const [activeSlide, setActiveSlide] = useState(0);\n\n  const slider1Ref = useRef();\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerTransparent: \"true\",\n      headerLeft: () => (\n        <BackButton\n          onPress={() => {\n            navigation.goBack();\n          }}\n        />\n      ),\n      headerRight: () => <View />,\n    });\n  }, []);\n\n  const renderImage = ({ item }) => (\n    <TouchableHighlight>\n      <View style={styles.imageContainer}>\n        <Image style={styles.image} source={{ uri: item }} />\n      </View>\n    </TouchableHighlight>\n  );\n\n  const onPressIngredient = (item) => {\n    var name = getIngredientName(item);\n    let ingredient = item;\n    navigation.navigate(\"Ingredient\", { ingredient, name });\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.carouselContainer}>\n        <View style={styles.carousel}>\n          <Carousel\n            ref={slider1Ref}\n            data={item.photosArray}\n            renderItem={renderImage}\n            sliderWidth={viewportWidth}\n            itemWidth={viewportWidth}\n            inactiveSlideScale={1}\n            inactiveSlideOpacity={1}\n            firstItem={0}\n            loop={false}\n            autoplay={false}\n            autoplayDelay={500}\n            autoplayInterval={3000}\n            onSnapToItem={(index) => setActiveSlide(0)}\n          />\n          <Pagination\n            dotsLength={item.photosArray.length}\n            activeDotIndex={activeSlide}\n            containerStyle={styles.paginationContainer}\n            dotColor=\"rgba(255, 255, 255, 0.92)\"\n            dotStyle={styles.paginationDot}\n            inactiveDotColor=\"white\"\n            inactiveDotOpacity={0.4}\n            inactiveDotScale={0.6}\n            carouselRef={slider1Ref.current}\n            tappableDots={!!slider1Ref.current}\n          />\n        </View>\n      </View>\n      <View style={styles.infoRecipeContainer}>\n        <Text style={styles.infoRecipeName}>{item.title}</Text>\n        <View style={styles.infoContainer}>\n          <TouchableHighlight\n            onPress={() =>\n              navigation.navigate(\"RecipesList\", { category, title })\n            }\n          >\n            <Text style={styles.category}>\n              {getCategoryName(item.categoryId).toUpperCase()}\n            </Text>\n          </TouchableHighlight>\n        </View>\n\n        <View style={styles.infoContainer}>\n          <Image\n            style={styles.infoPhoto}\n            source={require(\"../../../assets/icons/time.png\")}\n          />\n          <Text style={styles.infoRecipe}>{item.time} minutes </Text>\n        </View>\n\n        <View style={styles.infoContainer}>\n          <ViewIngredientsButton\n            onPress={() => {\n              let ingredients = item.ingredients;\n              let title = \"Ingredients for \" + item.title;\n              navigation.navigate(\"IngredientsDetails\", { ingredients, title });\n            }}\n          />\n        </View>\n        <View style={styles.infoContainer}>\n          <Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}